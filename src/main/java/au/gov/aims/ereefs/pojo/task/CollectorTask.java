package au.gov.aims.ereefs.pojo.task;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * Specialised {@link Task} for collecting outputs from other {@code Tasks}. This functionality is
 * similar to implementations of the {@code java.util.stream.Collector} interface.
 *
 * @author Aaron Smith
 */
public class CollectorTask extends Task {

    /**
     * The URL for the file to be created by the collection process.
     */
    @JsonProperty
    protected String outputUrl;

    public String getOutputUrl() {
        return this.outputUrl;
    }

    /**
     * The outcome from the processing, normally completed by the Task handler.
     */
    @JsonProperty
    protected Outcome outcome = new Outcome();

    public Outcome getOutcome() {
        return this.outcome;
    }

    /**
     * Constructor, primarily for use by Jackson to populate the {@link Task} from the repository.
     */
    @JsonCreator
    public CollectorTask(@JsonProperty("_id") String id) {
        super(id);
    }

    /**
     * Convenience constructor, primarily for use by the application, invoking
     * {@link Task#Task(String, String)}.
     */
    public CollectorTask(String jobId,
                         String productDefinitionId,
                         String outputUrl) {
        super(jobId, productDefinitionId);
        this.outputUrl = outputUrl;
    }

    // ---------------------------------------------------------------------------------------------
    // Outcome
    // ---------------------------------------------------------------------------------------------

    /**
     * Enumerator identifying the type of files generated by the system.
     */
    static public enum GeneratedFileType {

        /**
         * A {@code NetCDF} file.
         */
        @JsonProperty("netcdf")
        NETCDF,

        /**
         * A {@code Summary} file.
         */
        @JsonProperty("summary")
        SUMMARY;

    }

    static public class GeneratedFile {

        protected GeneratedFileType type;

        public GeneratedFileType getType() {
            return this.type;
        }

        protected String url;

        public String getUrl() {
            return this.url;
        }

        public GeneratedFile() {
        }

        public GeneratedFile(GeneratedFileType type,
                             String url) {
            this.type = type;
            this.url = url;
        }

    }

    static public class Outcome {
        protected List<GeneratedFile> generatedFiles = new ArrayList<GeneratedFile>();

        public List<GeneratedFile> getGeneratedFiles() {
            return this.generatedFiles;
        }

        public void addGeneratedFiles(List<GeneratedFile> generatedFiles) {
            this.generatedFiles.addAll(generatedFiles);
        }

        public void addGeneratedFile(GeneratedFile generatedFile) {
            this.generatedFiles.add(generatedFile);
        }
    }

}
